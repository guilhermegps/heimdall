/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package heimdall.Portatil;

import heimdall.EncriptaDecriptaAES;
import heimdall.ExecutaSQL;
import heimdall.SenhaAutomatica;
import heimdall.Util.ComponenteRevisao;
import heimdall.Util.Modelo;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author guilherme
 */
public class JIRevisao extends javax.swing.JInternalFrame {
    private ArrayList<ComponenteRevisao> componentesRevisao;

    /**
     * Creates new form JIRevisao
     */
    public JIRevisao() {
        componentesRevisao = new ArrayList<ComponenteRevisao>();
        initComponents();
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tComponentesRevisao = new javax.swing.JTable();
        bTodos = new javax.swing.JButton();
        tfLinhasTabela = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bExcluirVerificaoes = new javax.swing.JButton();
        bConcluirRevisao = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(400, 502));

        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tComponentesRevisao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Número RFID", "Verificado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Byte.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tComponentesRevisao);
        if (tComponentesRevisao.getColumnModel().getColumnCount() > 0) {
            tComponentesRevisao.getColumnModel().getColumn(0).setPreferredWidth(50);
            tComponentesRevisao.getColumnModel().getColumn(1).setPreferredWidth(300);
            tComponentesRevisao.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        bTodos.setText("Todos");
        bTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTodosActionPerformed(evt);
            }
        });

        tfLinhasTabela.setEditable(false);

        jLabel9.setText("Nº");

        bExcluirVerificaoes.setText("Excluir Verificações");
        bExcluirVerificaoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirVerificaoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(bExcluirVerificaoes)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfLinhasTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bTodos)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(tfLinhasTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bExcluirVerificaoes)))
                .addContainerGap())
        );

        bConcluirRevisao.setText("Concluir Revisão");
        bConcluirRevisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConcluirRevisaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bConcluirRevisao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bCancelar)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelar)
                    .addComponent(bConcluirRevisao))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bExcluirVerificaoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirVerificaoesActionPerformed
        deleteRows();
    }//GEN-LAST:event_bExcluirVerificaoesActionPerformed

    private void bConcluirRevisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConcluirRevisaoActionPerformed
        gerarArquivio();
        mostraDadosArquivo();
    }//GEN-LAST:event_bConcluirRevisaoActionPerformed

    private void bTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTodosActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss"); 
        componentesRevisao.add(new ComponenteRevisao(sdf.format(new Date()), "001", true));
        initTable();
    }//GEN-LAST:event_bTodosActionPerformed

    private void deleteRows(){
        DefaultTableModel dtm = (DefaultTableModel) tComponentesRevisao.getModel();
        componentesRevisao = new ArrayList<ComponenteRevisao>();
        
        for(int i=0;i<tComponentesRevisao.getRowCount();i++){
            if((boolean)tComponentesRevisao.getValueAt(i,0) == false){  
                componentesRevisao.add(new ComponenteRevisao(
                        (String)tComponentesRevisao.getValueAt(i,1),
                        "001",
                        true)
                );
            }
        }
        initTable();
    }
    
    private void initTable(){        
        DefaultTableModel dtm = (DefaultTableModel) tComponentesRevisao.getModel();
        
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
                
        for(int i=0;i<componentesRevisao.size();i++){
            ImageIcon icone = new ImageIcon();
            
            if(componentesRevisao.get(i).isVerificado())
                icone = new ImageIcon(getClass().getResource("/heimdall/img/icons 16x16/accept.png"));
            else
                icone = new ImageIcon(getClass().getResource("/heimdall/img/icons 16x16/cancel.png"));
            
            dtm.addRow(new Object[] {false, componentesRevisao.get(i).getRFID(), icone});   
        }
        
        TableColumnModel columnModel = tComponentesRevisao.getColumnModel();
        JTableRenderer renderer = new JTableRenderer();
        columnModel.getColumn(2).setCellRenderer(renderer);
        
        tComponentesRevisao.setModel(dtm);
        tfLinhasTabela.setText(Integer.toString(dtm.getRowCount()));
    }
    
    private void gerarArquivio(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd_MM_yyyy_HH_mm_ss"); 
        EncriptaDecriptaAES AES = new EncriptaDecriptaAES();
        File f = new File("revisoes/heimdallrevisao_"+sdf.format(new Date())+".rev");
        
        try {
            if(f.isFile())
                f.delete();
            new File("revisoes/").mkdir();
            FileOutputStream arquivo = new FileOutputStream(f);
            ObjectOutputStream objGravar = new ObjectOutputStream(arquivo);
            
            objGravar.writeObject(componentesRevisao); //Gera Arquivo temporario
            objGravar.close();
            arquivo.close();
            
            byte[] arquivoBytes = getBytesFile(f);
            f.delete(); // Apaga arquivo temporario
            arquivo = new FileOutputStream(f);
            arquivo.write(AES.encriptaAES(arquivoBytes));
            arquivo.close();
            
        } catch (IOException ex) {
            Logger.getLogger(JIRevisao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private byte[] getBytesFile(File file) {  
        int len =(int)file.length();    
        byte[] sendBuf = new byte[len];  
        FileInputStream inFile  = null;  
        try {  
           inFile = new FileInputStream(file);           
           inFile.read(sendBuf, 0, len);    

        } catch (FileNotFoundException fnfex) {  
            Logger.getLogger(JIRevisao.class.getName()).log(Level.SEVERE, null, fnfex);
        } catch (IOException ioex) {  
            Logger.getLogger(JIRevisao.class.getName()).log(Level.SEVERE, null, ioex);
        }  
        return sendBuf; 
    }
    
    private void mostraDadosArquivo(){
        EncriptaDecriptaAES AES = new EncriptaDecriptaAES();
        String nomeArquivo = JOptionPane.showInputDialog("Nome do arquivo");
        File f = new File("revisoes/"+nomeArquivo);
        byte bytesArquivo[];
        
        try {
            if(f.exists() && f.isFile()){
                bytesArquivo = getBytesFile(f);
                f = new File("revisoes/temporario.temp");
                
                FileOutputStream esc = new FileOutputStream(f);
                esc.write(AES.decriptaAES(bytesArquivo));
                esc.close();
                
                FileInputStream ler = new FileInputStream(f);
                ObjectInputStream objLer = new ObjectInputStream(ler);
                ArrayList<ComponenteRevisao> aux = (ArrayList<ComponenteRevisao>) objLer.readObject();
                f.delete();
                
                for(int i=0; i<aux.size(); i++){
                    System.out.println(aux.get(i).getRFID());
                }
            }
            else {
                System.out.println("Arquivo não encontrado");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JIRevisao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JIRevisao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JIRevisao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bConcluirRevisao;
    private javax.swing.JButton bExcluirVerificaoes;
    private javax.swing.JButton bTodos;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tComponentesRevisao;
    private javax.swing.JTextField tfLinhasTabela;
    // End of variables declaration//GEN-END:variables
}
